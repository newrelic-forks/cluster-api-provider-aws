
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.9
  creationTimestamp: null
  name: awsmachinepools.exp.infrastructure.cluster.x-k8s.io
spec:
  group: exp.infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AWSMachinePool
    listKind: AWSMachinePoolList
    plural: awsmachinepools
    singular: awsmachinepool
  scope: Namespaced
  versions:
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AWSMachinePool is the Schema for the awsmachinepools API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AWSMachinePoolSpec defines the desired state of AWSMachinePool
            properties:
              additionalSecurityGroups:
                description: AdditionalSecurityGroups is an array of references to security groups that should be applied to the instances. These security groups would be set in addition to any security groups defined at the cluster level or in the actuator.
                items:
                  description: AWSResourceReference is a reference to a specific AWS resource by ID, ARN, or filters. Only one of ID, ARN or Filters may be specified. Specifying more than one will result in a validation error.
                  properties:
                    arn:
                      description: ARN of resource
                      type: string
                    filters:
                      description: 'Filters is a set of key/value pairs used to identify a resource They are applied according to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                      items:
                        description: Filter is a filter used to identify an AWS resource
                        properties:
                          name:
                            description: Name of the filter. Filter names are case-sensitive.
                            type: string
                          values:
                            description: Values includes one or more filter values. Filter values are case-sensitive.
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        - values
                        type: object
                      type: array
                    id:
                      description: ID of resource
                      type: string
                  type: object
                type: array
              additionalTags:
                additionalProperties:
                  type: string
                description: Tags defines a map of tags.
                type: object
              autoScalingGroupName:
                type: string
              availabilityZones:
                items:
                  type: string
                type: array
              awsLaunchTemplate:
                description: AwsLaunchTemplate defines the desired state of AWSLaunchTemplate
                properties:
                  ami:
                    description: 'todo: use a helper'
                    properties:
                      arn:
                        description: ARN of resource
                        type: string
                      filters:
                        description: 'Filters is a set of key/value pairs used to identify a resource They are applied according to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                        items:
                          description: Filter is a filter used to identify an AWS resource
                          properties:
                            name:
                              description: Name of the filter. Filter names are case-sensitive.
                              type: string
                            values:
                              description: Values includes one or more filter values. Filter values are case-sensitive.
                              items:
                                type: string
                              type: array
                          required:
                          - name
                          - values
                          type: object
                        type: array
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  iamInstanceProfile:
                    type: string
                  id:
                    description: all the things needed for a launch template
                    type: string
                  imageLookupBaseOS:
                    description: ImageLookupBaseOS is the name of the base operating system to use for image lookup the AMI is not set.
                    type: string
                  imageLookupFormat:
                    description: 'ImageLookupFormat is the AMI naming format to look up the image for this machine It will be ignored if an explicit AMI is set. Supports substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and kubernetes version, respectively. The BaseOS will be the value in ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as defined by the packages produced by kubernetes/release without v as a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                    type: string
                  imageLookupOrg:
                    description: ImageLookupOrg is the AWS Organization ID to use for image lookup if AMI is not set.
                    type: string
                  instanceType:
                    description: 'InstanceType is the type of instance to create. Example: m4.xlarge'
                    type: string
                  name:
                    type: string
                  networkInterfaces:
                    items:
                      description: NetworkInterface from describe-launch-templates
                      properties:
                        deviceIndex:
                          format: int64
                          type: integer
                        groups:
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  rootVolume:
                    description: RootVolume encapsulates the configuration options for the root volume
                    properties:
                      encrypted:
                        description: Encrypted is whether the volume should be encrypted or not.
                        type: boolean
                      encryptionKey:
                        description: EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN. If Encrypted is set and this is omitted, the default AWS key will be used. The key must already exist and be accessible by the controller.
                        type: string
                      iops:
                        description: IOPS is the number of IOPS requested for the disk. Not applicable to all types.
                        format: int64
                        type: integer
                      size:
                        description: Size specifies size (in Gi) of the root storage device. Must be greater than the image root snapshot size or 8 (whichever is greater).
                        format: int64
                        minimum: 8
                        type: integer
                      type:
                        description: Type is the type of the root volume (e.g. gp2, io1, etc...).
                        type: string
                    required:
                    - size
                    type: object
                  sshKeyName:
                    description: SSHKeyName is the name of the ssh key to attach to the instance. Valid values are empty string (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
                    type: string
                  versionNumber:
                    format: int64
                    type: integer
                type: object
              desiredCapacity:
                format: int32
                type: integer
              maxSize:
                format: int32
                type: integer
              minSize:
                format: int32
                type: integer
              mixedInstancesPolicy:
                description: MixedInstancesPolicy describes how multiple instance types will be used by the ASG.
                properties:
                  instancesDistribution:
                    description: InstancesDistribution from describe-auto-scaling-groups
                    properties:
                      onDemandAllocationStrategy:
                        type: string
                      onDemandBaseCapacity:
                        format: int64
                        type: integer
                      onDemandPercentageAboveBaseCapacity:
                        format: int64
                        type: integer
                      spotAllocationStrategy:
                        type: string
                    type: object
                  overrides:
                    items:
                      description: Overrides from describe-auto-scaling-groups
                      properties:
                        instanceType:
                          type: string
                      required:
                      - instanceType
                      type: object
                    type: array
                type: object
              providerID:
                type: string
              providerIDList:
                description: ProviderIDList are the identification IDs of machine instances provided by the provider. This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.
                items:
                  type: string
                type: array
              subnets:
                items:
                  type: string
                type: array
            type: object
          status:
            description: AWSMachinePoolStatus defines the observed state of AWSMachinePool
            properties:
              autoScalingGroupARN:
                type: string
              conditions:
                description: Conditions provide observations of the operational state of a Cluster API resource.
                items:
                  description: Condition defines an observation of a Cluster API resource operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              launchTemplateID:
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              replicas:
                description: Replicas is the most recently observed number of replicas
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
